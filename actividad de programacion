#include <stdio.h>

#define MAX 100

// Declaración de funciones
void insertar(int conjunto[], int *n);
void borrar(int conjunto[], int *n, int elemento);
void editar(int conjunto[], int n, int viejo, int nuevo);
void vaciar(int conjunto[], int *n);
void imprimir(int conjunto[], int n);
void union_conjuntos(int conjunto1[], int conjunto2[], int m, int n);
void interseccion_conjuntos(int conjunto1[], int conjunto2[], int m, int n);
void diferencia_conjuntos(int conjunto1[], int conjunto2[], int m, int n);
void complemento_conjuntos(int universal[], int conjunto[], int m, int n);

int main() {
    int conjunto[MAX], conjunto2[MAX], n = 0, m = 0, opcion, elemento, viejo, nuevo;

    do {
        printf("\n1. Insertar\n2. Borrar\n3. Editar\n4. Vaciar\n5. Imprimir\n6. Salir\n");
        printf("Elige una opcion: ");
        scanf("%d", &opcion);

        switch(opcion) {
            case 1:
                insertar(conjunto, &n);
                break;
            case 2:
                printf("Introduce el elemento a borrar: ");
                scanf("%d", &elemento);
                borrar(conjunto, &n, elemento);
                break;
            case 3:
                printf("Introduce el elemento a editar: ");
                scanf("%d", &viejo);
                printf("Introduce el nuevo valor: ");
                scanf("%d", &nuevo);
                editar(conjunto, n, viejo, nuevo);
                break;
            case 4:
                vaciar(conjunto, &n);
                break;
            case 5:
                printf("\n1. Unión\n2. Interseccion\n3. Diferencia\n4. Complemento\n");
                printf("Elige una opción: ");
                scanf("%d", &opcion);
                printf("Introduce los elementos del segundo conjunto: ");
                for(int i = 0; i < m; i++)
                    scanf("%d", &conjunto2[i]);
                switch(opcion) {
                    case 1:
                        union_conjuntos(conjunto, conjunto2, n, m);
                        break;
                    case 2:
                        interseccion_conjuntos(conjunto, conjunto2, n, m);
                        break;
                    case 3:
                        diferencia_conjuntos(conjunto, conjunto2, n, m);
                        break;

                }
                break;
        }
    } while(opcion != 6);

    return 0;
}

void insertar(int conjunto[], int *n) {
    printf("Introduce un elemento: ");
    scanf("%d", &conjunto[*n]);
    (*n)++;
}

void borrar(int conjunto[], int *n, int elemento) {
    for(int i = 0; i < *n; i++) {
        if(conjunto[i] == elemento) {
            for(int j = i; j < *n - 1; j++)
                conjunto[j] = conjunto[j + 1];
            (*n)--;
            return;
        }
    }
    printf("Elemento no encontrado.\n");
}

void editar(int conjunto[], int n, int viejo, int nuevo) {
    for(int i = 0; i < n; i++) {
        if(conjunto[i] == viejo) {
            conjunto[i] = nuevo;
            return;
        }
    }
    printf("Elemento no encontrado.\n");
}

void vaciar(int conjunto[], int *n) {
    *n = 0;
}

void imprimir(int conjunto[], int n) {
    printf("Conjunto: ");
    for(int i = 0; i < n; i++)
        printf("%d ", conjunto[i]);
    printf("\n");
}

void union_conjuntos(int conjunto1[], int conjunto2[], int m, int n) {
    int i = 0, j = 0;
    printf("Union: ");
    while(i < m && j < n) {
        if(conjunto1[i] < conjunto2[j])
            printf("%d ", conjunto1[i++]);
        else if(conjunto2[j] < conjunto1[i])
            printf("%d ", conjunto2[j++]);
        else {
            printf("%d ", conjunto2[j++]);
            i++;
        }
    }
    while(i < m)
        printf("%d ", conjunto1[i++]);
    while(j < n)
        printf("%d ", conjunto2[j++]);
    printf("\n");
}

void interseccion_conjuntos(int conjunto1[], int conjunto2[], int m, int n) {
    int i = 0, j = 0;
    printf("Interseccion: ");
    while(i < m && j < n) {
        if(conjunto1[i] < conjunto2[j])
            i++;
        else if(conjunto2[j] < conjunto1[i])
            j++;
        else {
            printf("%d ", conjunto2[j++]);
            i++;
        }
    }
    printf("\n");
}

void diferencia_conjuntos(int conjunto1[], int conjunto2[], int m, int n) {
    int i = 0, j = 0;
    printf("Diferencia (Conjunto1 - Conjunto2): ");
    while(i < m && j < n) {
        if(conjunto1[i] < conjunto2[j])
            printf("%d ", conjunto1[i++]);
        else if(conjunto2[j] < conjunto1[i])
            j++;
        else {
            i++;
            j++;
        }
    }
    while(i < m)
        printf("%d ", conjunto1[i++]);
    printf("\n");
}

void complemento_conjuntos(int universal[], int conjunto[], int m, int n) {
    int i = 0, j = 0;
    printf("Complemento (Universal - Conjunto1): ");
    while(i < m && j < n) {
        if(universal[i] < conjunto[j])
            printf("%d ", universal[i++]);
        else if(conjunto[j] < universal[i])
            j++;
        else {
            i++;
            j++;
        }
    }
    while(i < m)
        printf("%d ", universal[i++]);
    printf("\n");
}
